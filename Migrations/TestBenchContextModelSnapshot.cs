// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RotatingBendingTestBench.Data;

#nullable disable

namespace RotatingBendingTestBench.Migrations
{
    [DbContext(typeof(TestBenchContext))]
    partial class TestBenchContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.16");

            modelBuilder.Entity("RotatingBendingTestBench.Models.TestData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<double>("RotationSpeedSetpoint")
                        .HasColumnType("REAL");

                    b.Property<int>("TestSimulatorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TestSimulatorId");

                    b.ToTable("TestData");
                });

            modelBuilder.Entity("RotatingBendingTestBench.Models.TestResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("RotationSpeed")
                        .HasColumnType("REAL");

                    b.Property<double>("StressLevel")
                        .HasColumnType("REAL");

                    b.Property<double>("Temperature")
                        .HasColumnType("REAL");

                    b.Property<int>("TestSequenceId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TestSimulatorId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TestSimulatorId");

                    b.ToTable("TestResult");
                });

            modelBuilder.Entity("RotatingBendingTestBench.Models.TestSimulator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TestSimulator");
                });

            modelBuilder.Entity("RotatingBendingTestBench.Models.TestData", b =>
                {
                    b.HasOne("RotatingBendingTestBench.Models.TestSimulator", null)
                        .WithMany("Data")
                        .HasForeignKey("TestSimulatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RotatingBendingTestBench.Models.TestResult", b =>
                {
                    b.HasOne("RotatingBendingTestBench.Models.TestSimulator", null)
                        .WithMany("Results")
                        .HasForeignKey("TestSimulatorId");
                });

            modelBuilder.Entity("RotatingBendingTestBench.Models.TestSimulator", b =>
                {
                    b.Navigation("Data");

                    b.Navigation("Results");
                });
#pragma warning restore 612, 618
        }
    }
}
